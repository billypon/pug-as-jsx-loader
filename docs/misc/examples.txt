--- @title hello world
div
  h1.greeting(onClick='{greeting.bind(this)}')
    | Hello World, {name}!

--- @title components
// component
Modal
  // sub component
  //- e.g. https://react-bootstrap.github.io/components.html#modals-live
  Modal.Header
    Modal.Title { content.header }
  Modal.Body { content.body }

--- @title classname
div
  // merge classNames
  .btn(attrs="otherAttrs", class="btn-default")
  // manipulate classNames
  ul.nav.nav-tabs(className='{"nav-tabs-" + this.state.type}')

--- @title multi-line
div(options='{{ \
  lineNum: true, \
  theme: "monokai" }}')

--- @title TodoMVC
section.todoapp
  header.header
    h1 todos
    input.new-todo(autofocus='autofocus', autocomplete='off', placeholder='What needs to be done?')
  section.main
    input.toggle-all(type='checkbox')
    ul.todo-list
      TodoItem(@repeat='shownTodos as todo',
        key='{todo.id}', todo='{todo}',
        onToggle='{this.toggle.bind(this, todo)}',
        onDestroy='{this.destroy.bind(this, todo)}',
        onEdit='{this.edit.bind(this, todo)}',
        editing='{this.state.editing === todo.id}',
        onSave='{this.save.bind(this, todo)}',
        onCancel='{this.cancel}')
  TodoFooter(@if='activeTodoCount + completedCount > 0',
    count='{activeTodoCount}',
    completedCount='{completedCount}',
    nowShowing='{this.state.nowShowing}',
    onClearCompleted='{this.clearCompleted}')

--- @title @for
--- @category @helpers
div
  // @for, @repeat
  ul
    //- @for accept one of these
    //- Array
    //- Object
    //- Immutable.List
    //- Immutable.Map
    li(@for='item in items') {item.name}
    li(@for='(item, index) in items') {item.name}
    li(@for='(item, key, index) in items') {item.name}
  
    //- you can see the implementation of __macro.for here
    //- https://github.com/bluewings/pug-as-jsx-loader/blob/master/lib/macro.js

    li(@repeat='active as item') {item.content}
    li(@repeat='archived as item',
      key='{item.id}') {item.content}

--- @title @if, @unless, @show, @hide
--- @category @helpers
div
  // @if
  span(@if='this.props.if') hello
  // @unless
  span(@unless='this.props.unless') unless
  // @show
  span(@show='visible.indexOf(target) !== -1') show
  // @hide
  span(@hide='visible.indexOf(target) === -1') hide

--- @title inline pug template
--- @category etc
// inline pug template usage
function Component {
  return pug`
    div
      h1 My Component
      p This is my component using pug.
  `;
}
